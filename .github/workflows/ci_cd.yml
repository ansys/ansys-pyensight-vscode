# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: GitHub CI

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
env:
  PYENSIGHT_PACKAGE_NAMESPACE: 'ansys.pyensight.core'
  PYENSIGHT_PYPI: 'ansys-pyensight-core'
  ENSIGHT_IMAGE: 'ghcr.io/ansys-internal/ensight_dev'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [16.x, 18.x]
        python-version: ['3.10']
        should-release:
          - ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
        exclude:
          - should-release: false
            os: macos-latest
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: "Install Git and clone project"
      uses: actions/checkout@v4
    - name: "Set up Python ${{ inputs.python-version }}"
      uses: ansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}
    - name: "Update pip and install the build and wheel libraries"
      shell: bash
      run: |
        python -m pip install --upgrade pip build wheel
    - name: "Install PyEnSight"
      shell: bash
      run: |
        python -m pip install $PYENSIGHT_PYPI
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm ci
    - run: npm run build --if-present
    - name: Run Tests Linux
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        echo ">>> Started xvfb"
        export DISPLAY=:99
        export NODEPYTHONINTERP=$(which python)
        echo $NODEPYTHONINTERP
        echo $DISPLAY
        npm test
    - name: Run Tests Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        $pythonval = where.exe python.exe
        Set-Item -Path Env:NODEPYTHONINTERP -Value ("$pythonval")
        write-host $pythonval
        npm test

  build:
    name: Nightly build
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: "Install Git and clone project"
      uses: actions/checkout@v4
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - run: npm ci
    - name: Build extension
      shell: bash
      run: |
        npx vsce package
    - name: Publish build
      if: matrix.should_release == true
      shell: bash
      run: |
        npx vsce publish
